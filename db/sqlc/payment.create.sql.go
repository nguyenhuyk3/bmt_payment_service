// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: payment.create.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPayment = `-- name: CreatePayment :one
INSERT INTO payments (
    order_id,
    amount,
    status,
    method,
    transaction_id,
    error_message
) VALUES (
    $1, $2, $3, $4, $5, $6
)
RETURNING id, order_id, amount, status, method, transaction_id, error_message, created_at
`

type CreatePaymentParams struct {
	OrderID       int32           `json:"order_id"`
	Amount        string          `json:"amount"`
	Status        PaymentStatuses `json:"status"`
	Method        PaymentMethods  `json:"method"`
	TransactionID string          `json:"transaction_id"`
	ErrorMessage  pgtype.Text     `json:"error_message"`
}

func (q *Queries) CreatePayment(ctx context.Context, arg CreatePaymentParams) (Payment, error) {
	row := q.db.QueryRow(ctx, createPayment,
		arg.OrderID,
		arg.Amount,
		arg.Status,
		arg.Method,
		arg.TransactionID,
		arg.ErrorMessage,
	)
	var i Payment
	err := row.Scan(
		&i.ID,
		&i.OrderID,
		&i.Amount,
		&i.Status,
		&i.Method,
		&i.TransactionID,
		&i.ErrorMessage,
		&i.CreatedAt,
	)
	return i, err
}
